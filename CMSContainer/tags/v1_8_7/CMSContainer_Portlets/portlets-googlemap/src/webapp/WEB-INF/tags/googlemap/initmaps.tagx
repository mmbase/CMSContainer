<jsp:root version="2.0"
          xmlns:jsp="http://java.sun.com/JSP/Page">

<script type="text/javascript">
//&lt;![CDATA[
<![CDATA[
    var map; var geocoder; var gdir; var bounds;
    var gmarkers = [];

    function initializePanels(mapId, directionsId) {
        if (GBrowserIsCompatible()) {
            geocoder = new GClientGeocoder();
            bounds = new GLatLngBounds();
            
            map = new GMap2(document.getElementById(mapId));
            map.setUIToDefault();
            
            if (typeof(directionsId) != "undefined" ) {
                gdirPanel = document.getElementById(directionsId);
                gdir = new GDirections(map, gdirPanel);
                GEvent.addListener(gdir, "load", onGDirectionsLoad);
                GEvent.addListener(gdir, "error", handleDirectionsErrors);
            }
            GEvent.addListener(map,"infowindowclose", onInfoWindowClosed);

            // ==== It is necessary to make a setCenter call of some description before adding markers ====
            // ==== At this point we dont know the real values ====
            map.setCenter(new GLatLng(0,0),0);
        }
        else {
          alert("Sorry, the Google Maps API is not compatible with this browser");
        }
    }
    function addOverviewControl(mapId, width, height) {
        map.addControl(new GOverviewMapControl(new GSize(width, height)));
    }
    function addAddress(address, info, center) {
        geocoder.getLatLng(
                address,
                function(point) {
                    if (point) {
                    	if (typeof(center) == "undefined") {
                			center = true;
                    	}
                        if (center) {
                        	map.setCenter(point, 13);
                        }
                        var marker = createMarker(point, info);
                        map.addOverlay(marker);
                        if (typeof(info) != "undefined" ) {
                        	marker.openInfoWindowHtml(info);
                        }
                    }
                }
            );
    }
    function addAddressMarker(address, info) {
        geocoder.getLatLng(
                address,
                function(point) {
                    if (point) {
                        var marker = createMarker(point, info);
                        map.addOverlay(marker);
                    }
                }
            );
    }
    function addMarker(lat,lng, info) {
    	var point = new GLatLng(lat,lng);
	    var marker = createMarker(point, info);
	    map.addOverlay(marker);
		bounds.extend(point);
    }
    function createMarker(point, info) {
        var marker = new GMarker(point);
        if (typeof(info) != "undefined" ) {
        	marker.bindInfoWindowHtml(info);
        }
        gmarkers.push(marker);
        return marker;
    }
	function adjustMapToBounds() {
        // ===== determine the zoom level from the bounds =====
        map.setZoom(map.getBoundsZoomLevel(bounds) - 1);
        // ===== determine the centre from the bounds ======
        map.setCenter(bounds.getCenter());
	}
    function handleDirectionsErrors(){
       if (gdir.getStatus().code == G_GEO_UNKNOWN_ADDRESS)
         alert("No corresponding geographic location could be found for one of the specified addresses. This may be due to the fact that the address is relatively new, or it may be incorrect.\nError code: " + gdir.getStatus().code);
       else if (gdir.getStatus().code == G_GEO_SERVER_ERROR)
         alert("A geocoding or gdir request could not be successfully processed, yet the exact reason for the failure is not known.\n Error code: " + gdir.getStatus().code);
       else if (gdir.getStatus().code == G_GEO_MISSING_QUERY)
         alert("The HTTP q parameter was either missing or had no value. For geocoder requests, this means that an empty address was specified as input. For gdir requests, this means that no query was specified in the input.\n Error code: " + gdir.getStatus().code);
    //   else if (gdir.getStatus().code == G_UNAVAILABLE_ADDRESS) -- Doc bug... this is either not defined, or Doc is wrong
    //     alert("The geocode for the given address or the route for the given gdir query cannot be returned due to legal or contractual reasons.\n Error code: " + gdir.getStatus().code);
       else if (gdir.getStatus().code == G_GEO_BAD_KEY)
         alert("The given key is either invalid or does not match the domain for which it was given. \n Error code: " + gdir.getStatus().code);
       else if (gdir.getStatus().code == G_GEO_BAD_REQUEST)
         alert("A gdir request could not be successfully parsed.\n Error code: " + gdir.getStatus().code);
       else alert("An unknown error occurred.");
    }
    function onGDirectionsLoad(){ 
      // Use this function to access information about the latest load() results.
    }
    function onInfoWindowClosed(){
    	// Use this function to access information about the latest info window close.
    }

    // This function zooms in or out
    // its not necessary to check for out of range zoom numbers, because the API checks
    function zoomMap(a) {
      map.setZoom(map.getZoom() + a);
    }
    // This function triggers an click event on a marker
    function triggerMarkerClick(i) {
        GEvent.trigger(gmarkers[i], "click");
        return false;
    }
    function wrapInfoWindowHtml(html) {
    	return "<span class='iwstyle'>"+html+"<\/span>";
    }
    
]]>
//]]&gt;
</script>
</jsp:root>